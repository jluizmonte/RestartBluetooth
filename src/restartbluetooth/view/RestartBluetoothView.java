package restartbluetooth.view;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

/**
 *
 * @author joseluiz
 */
public class RestartBluetoothView extends javax.swing.JFrame {

    /**
     * Creates new form RestartBluetoothView
     */
    public RestartBluetoothView() {
        initComponents();
        setLocationRelativeTo(null);
        jlStatus.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jbOk = new javax.swing.JButton();
        jbSair = new javax.swing.JButton();
        jlSaida = new javax.swing.JLabel();
        jlStatus = new javax.swing.JLabel();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RESTART BLUETOOTH DEVICE");
        setBackground(new java.awt.Color(52, 49, 72));

        jPanel1.setBackground(new java.awt.Color(52, 49, 72));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CLIQUE EM OK PARA REINICIAR A INTERFACE BLUETOOTH");

        jbOk.setText("OK");
        jbOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOkActionPerformed(evt);
            }
        });

        jbSair.setText("SAIR");
        jbSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSairActionPerformed(evt);
            }
        });

        jlSaida.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jlSaida.setForeground(new java.awt.Color(255, 255, 255));
        jlSaida.setText("Dispositivo Necessita reinicialização");

        jlStatus.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jlStatus.setForeground(new java.awt.Color(255, 255, 255));
        jlStatus.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlStatus.setText("jLabel2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jbOk, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbSair))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jlSaida)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbOk)
                    .addComponent(jbSair))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlSaida)
                    .addComponent(jlStatus)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RestartBluetoothView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new RestartBluetoothView().setVisible(true);
        });
    }
    private void jbOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOkActionPerformed
        try {
            executarProcesso1();
            executarProcesso2();
            executarProcesso3();
            jlSaida.setText("Dispositivo reinciado com sucesso");
            jlSaida.setForeground(Color.green);
        } catch (Exception e) {
            jlSaida.setText("Ocorreu um erro ao reiniciar o dispositivo bluetooth" + e);
        }
    }//GEN-LAST:event_jbOkActionPerformed

    private void jbSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSairActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jbSairActionPerformed

    private void executarComandos() throws IOException, InterruptedException {
        String command1 = "systemctl daemon-reload";
        String command2 = "systemctl restart bluetooth";
        String command3 = "chmod 777 /var/run/sdp";

        String saida1 = "";
        String saida2 = "";
        String saida3 = "";

        Process proc1 = Runtime.getRuntime().exec(command1);
        Process proc2 = Runtime.getRuntime().exec(command2);
        Process proc3 = Runtime.getRuntime().exec(command3);

        // Read the output
        BufferedReader reader1 = new BufferedReader(new InputStreamReader(proc1.getInputStream()));
        BufferedReader reader2 = new BufferedReader(new InputStreamReader(proc2.getInputStream()));
        BufferedReader reader3 = new BufferedReader(new InputStreamReader(proc3.getInputStream()));

        String line = "";
        while ((line = reader1.readLine()) != null) {
            System.out.print(line + "\n");
        }

        if ((line = reader1.readLine()) == null) {
            saida1 = "'daemon-reload' executado com sucesso\n";
            jlSaida.setText(saida1 + saida2 + saida3);
        }
        if ((line = reader2.readLine()) == null) {
            saida2 = "dispositivo bluetooth reiniciado com sucesso\n";
            jlSaida.setText(saida1 + saida2 + saida3);
        }
        if ((line = reader3.readLine()) == null) {
            saida3 = "permissões de acesso concedidas ao dispositivo bluetooth";
            jlSaida.setText(saida1 + saida2 + saida3);
        }
        proc1.waitFor();
        proc2.waitFor();
        proc2.waitFor();
    }

    private void executarProcesso1() {
        String command1 = "systemctl restart bluetooth";
        String saida1 = "";
        try {
            Process process1 = new ProcessBuilder(new String[]{"bash", "-c", command1}).redirectErrorStream(true).start();
            BufferedReader reader1 = new BufferedReader(new InputStreamReader(process1.getInputStream()));
            String line = null;
            while ((line = reader1.readLine()) != null) {
                System.out.print(line + "\n");
                saida1 = line;
                jlSaida.setText(saida1);
            }
        } catch (IOException e) {
            jlSaida.setText("Ocorreu um erro ao executar os comandos" + e);
        }
    }

    private void executarProcesso2() {
        String command2 = "systemctl daemon-reload";
        String saida2 = "";

        try {
            Process process2 = new ProcessBuilder(new String[]{"bash", "-c", command2}).redirectErrorStream(true).start();
            BufferedReader reader2 = new BufferedReader(new InputStreamReader(process2.getInputStream()));
            String line = null;
            while ((line = reader2.readLine()) != null) {
                System.out.print(line + "\n");
                saida2 = line;
                jlSaida.setText(saida2);
            }

        } catch (IOException e) {
            jlSaida.setText("Ocorreu um erro ao executar os comandos" + e);
        }
    }

    private void executarProcesso3() {
        String command3 = "chmod 777 /var/run/sdp";
        String saida3 = "";

        try {
            Process process3 = new ProcessBuilder(new String[]{"bash", "-c", command3}).redirectErrorStream(true).start();
            BufferedReader reader3 = new BufferedReader(new InputStreamReader(process3.getInputStream()));
            String line = null;
            while ((line = reader3.readLine()) != null) {
                System.out.print(line + "\n");
                saida3 = line;
                jlStatus.setVisible(true);
                jlStatus.setForeground(Color.red);
                jlStatus.setText("ERRO");
            }
        } catch (IOException e) {
            jlSaida.setText("Ocorreu um erro ao executar os comandos" + e);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbOk;
    private javax.swing.JButton jbSair;
    private javax.swing.JLabel jlSaida;
    private javax.swing.JLabel jlStatus;
    // End of variables declaration//GEN-END:variables
}
